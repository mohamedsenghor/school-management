<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="e007ca93-a3be-49bf-9ab2-acfff02379f7" activeEnvironment="Default" name="school-management" resourceRoot="${projectDir}" soapui-version="5.9.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="b5793c54-61dc-4be9-9305-7e5f36daf04b" wsaVersion="NONE" name="SectorsWebServicePortBinding" type="wsdl" bindingName="{http://bassine.com/school-management}SectorsWebServicePortBinding" soapVersion="1_1" anonymous="optional" definition="../wsdl/sectors.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/mac/Documents/isi_java/school-management/school-management-soap/src/main/webapp/WEB-INF/wsdl/sectors.wsdl"><con:part><con:url>file:/Users/mac/Documents/isi_java/school-management/school-management-soap/src/main/webapp/WEB-INF/wsdl/sectors.wsdl</con:url><con:content><![CDATA[<!--Published by XML-WS Runtime (https://github.com/eclipse-ee4j/metro-jax-ws). Runtime's version is XML-WS Runtime 4.0.0 git-revision#129f787.-->
<!--Generated by XML-WS Runtime (https://github.com/eclipse-ee4j/metro-jax-ws). Runtime's version is XML-WS Runtime 4.0.0 git-revision#129f787.-->
<definitions targetNamespace="http://bassine.com/school-management" name="SectorsWebService" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://bassine.com/school-management" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://bassine.com/school-management" schemaLocation="http://localhost:8080/school-management-soap/sectorsWebService?xsd=1"/>
    </xsd:schema>
  </types>
  <message name="getSector">
    <part name="parameters" element="tns:getSector"/>
  </message>
  <message name="getSectorResponse">
    <part name="parameters" element="tns:getSectorResponse"/>
  </message>
  <message name="saveSector">
    <part name="parameters" element="tns:saveSector"/>
  </message>
  <message name="saveSectorResponse">
    <part name="parameters" element="tns:saveSectorResponse"/>
  </message>
  <message name="getSectorWithClasses">
    <part name="parameters" element="tns:getSectorWithClasses"/>
  </message>
  <message name="getSectorWithClassesResponse">
    <part name="parameters" element="tns:getSectorWithClassesResponse"/>
  </message>
  <message name="getAllSectors">
    <part name="parameters" element="tns:getAllSectors"/>
  </message>
  <message name="getAllSectorsResponse">
    <part name="parameters" element="tns:getAllSectorsResponse"/>
  </message>
  <message name="updateSector">
    <part name="parameters" element="tns:updateSector"/>
  </message>
  <message name="updateSectorResponse">
    <part name="parameters" element="tns:updateSectorResponse"/>
  </message>
  <message name="deleteSector">
    <part name="parameters" element="tns:deleteSector"/>
  </message>
  <message name="deleteSectorResponse">
    <part name="parameters" element="tns:deleteSectorResponse"/>
  </message>
  <message name="searchSectorsByName">
    <part name="parameters" element="tns:searchSectorsByName"/>
  </message>
  <message name="searchSectorsByNameResponse">
    <part name="parameters" element="tns:searchSectorsByNameResponse"/>
  </message>
  <message name="existsSectorByName">
    <part name="parameters" element="tns:existsSectorByName"/>
  </message>
  <message name="existsSectorByNameResponse">
    <part name="parameters" element="tns:existsSectorByNameResponse"/>
  </message>
  <message name="countClassesInSector">
    <part name="parameters" element="tns:countClassesInSector"/>
  </message>
  <message name="countClassesInSectorResponse">
    <part name="parameters" element="tns:countClassesInSectorResponse"/>
  </message>
  <portType name="SectorsWebService">
    <operation name="getSector">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/getSectorRequest" message="tns:getSector"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/getSectorResponse" message="tns:getSectorResponse"/>
    </operation>
    <operation name="saveSector">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/saveSectorRequest" message="tns:saveSector"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/saveSectorResponse" message="tns:saveSectorResponse"/>
    </operation>
    <operation name="getSectorWithClasses">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/getSectorWithClassesRequest" message="tns:getSectorWithClasses"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/getSectorWithClassesResponse" message="tns:getSectorWithClassesResponse"/>
    </operation>
    <operation name="getAllSectors">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/getAllSectorsRequest" message="tns:getAllSectors"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/getAllSectorsResponse" message="tns:getAllSectorsResponse"/>
    </operation>
    <operation name="updateSector">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/updateSectorRequest" message="tns:updateSector"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/updateSectorResponse" message="tns:updateSectorResponse"/>
    </operation>
    <operation name="deleteSector">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/deleteSectorRequest" message="tns:deleteSector"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/deleteSectorResponse" message="tns:deleteSectorResponse"/>
    </operation>
    <operation name="searchSectorsByName">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/searchSectorsByNameRequest" message="tns:searchSectorsByName"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/searchSectorsByNameResponse" message="tns:searchSectorsByNameResponse"/>
    </operation>
    <operation name="existsSectorByName">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/existsSectorByNameRequest" message="tns:existsSectorByName"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/existsSectorByNameResponse" message="tns:existsSectorByNameResponse"/>
    </operation>
    <operation name="countClassesInSector">
      <input wsam:Action="http://bassine.com/school-management/SectorsWebService/countClassesInSectorRequest" message="tns:countClassesInSector"/>
      <output wsam:Action="http://bassine.com/school-management/SectorsWebService/countClassesInSectorResponse" message="tns:countClassesInSectorResponse"/>
    </operation>
  </portType>
  <binding name="SectorsWebServicePortBinding" type="tns:SectorsWebService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="getSector">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="saveSector">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getSectorWithClasses">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getAllSectors">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="updateSector">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="deleteSector">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="searchSectorsByName">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="existsSectorByName">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="countClassesInSector">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="SectorsWebService">
    <port name="SectorsWebServicePort" binding="tns:SectorsWebServicePortBinding">
      <soap:address location="http://localhost:8080/school-management-soap/sectorsWebService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/school-management-soap/sectorsWebService?xsd=1</con:url><con:content><![CDATA[<!--Published by XML-WS Runtime (https://github.com/eclipse-ee4j/metro-jax-ws). Runtime's version is XML-WS Runtime 4.0.0 git-revision#129f787.-->
<xs:schema version="1.0" targetNamespace="http://bassine.com/school-management" xmlns:tns="http://bassine.com/school-management" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="countClassesInSector" type="tns:countClassesInSector"/>
  <xs:element name="countClassesInSectorResponse" type="tns:countClassesInSectorResponse"/>
  <xs:element name="deleteSector" type="tns:deleteSector"/>
  <xs:element name="deleteSectorResponse" type="tns:deleteSectorResponse"/>
  <xs:element name="existsSectorByName" type="tns:existsSectorByName"/>
  <xs:element name="existsSectorByNameResponse" type="tns:existsSectorByNameResponse"/>
  <xs:element name="getAllSectors" type="tns:getAllSectors"/>
  <xs:element name="getAllSectorsResponse" type="tns:getAllSectorsResponse"/>
  <xs:element name="getSector" type="tns:getSector"/>
  <xs:element name="getSectorResponse" type="tns:getSectorResponse"/>
  <xs:element name="getSectorWithClasses" type="tns:getSectorWithClasses"/>
  <xs:element name="getSectorWithClassesResponse" type="tns:getSectorWithClassesResponse"/>
  <xs:element name="saveSector" type="tns:saveSector"/>
  <xs:element name="saveSectorResponse" type="tns:saveSectorResponse"/>
  <xs:element name="searchSectorsByName" type="tns:searchSectorsByName"/>
  <xs:element name="searchSectorsByNameResponse" type="tns:searchSectorsByNameResponse"/>
  <xs:element name="updateSector" type="tns:updateSector"/>
  <xs:element name="updateSectorResponse" type="tns:updateSectorResponse"/>
  <xs:complexType name="deleteSector">
    <xs:sequence>
      <xs:element name="sectorId" type="xs:long" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteSectorResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllSectors">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllSectorsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:sectorsDto" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sectorsDto">
    <xs:sequence>
      <xs:element name="classes" type="tns:classesDto" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="createdAt" type="tns:localDateTime" minOccurs="0"/>
      <xs:element name="id" type="xs:long" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="updatedAt" type="tns:localDateTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="classesDto">
    <xs:sequence>
      <xs:element name="className" type="xs:string" minOccurs="0"/>
      <xs:element name="createdAt" type="tns:localDateTime" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="id" type="xs:long" minOccurs="0"/>
      <xs:element name="sectorId" type="xs:long" minOccurs="0"/>
      <xs:element name="sectorName" type="xs:string" minOccurs="0"/>
      <xs:element name="updatedAt" type="tns:localDateTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="localDateTime" final="extension restriction">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="saveSector">
    <xs:sequence>
      <xs:element name="sector" type="tns:sectorsDto" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="saveSectorResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:sectorsDto" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSector">
    <xs:sequence>
      <xs:element name="sectorId" type="xs:long" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSectorResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:sectorsDto" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="searchSectorsByName">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="searchSectorsByNameResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:sectorsDto" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="countClassesInSector">
    <xs:sequence>
      <xs:element name="sectorId" type="xs:long" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="countClassesInSectorResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSectorWithClasses">
    <xs:sequence>
      <xs:element name="sectorId" type="xs:long" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSectorWithClassesResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:sectorsDto" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="existsSectorByName">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="existsSectorByNameResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateSector">
    <xs:sequence>
      <xs:element name="sector" type="tns:sectorsDto" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateSectorResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:sectorsDto" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint></con:endpoints><con:operation id="b9760d85-ae17-4a66-986b-813e37d819da" isOneWay="false" action="" name="countClassesInSector" bindingOperationName="countClassesInSector" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7841942d-8b3c-4469-bfd7-9c16231866f6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:countClassesInSector>
         <!--Optional:-->
         <sectorId>?</sectorId>
      </sch:countClassesInSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/countClassesInSectorRequest"/></con:call></con:operation><con:operation id="aaa006bc-457b-4e6e-a6a1-b31e5f7b08a4" isOneWay="false" action="" name="deleteSector" bindingOperationName="deleteSector" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5122e775-23ff-4b9d-8cec-073eee139049" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:deleteSector>
         <!--Optional:-->
         <sectorId>?</sectorId>
      </sch:deleteSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/deleteSectorRequest"/></con:call></con:operation><con:operation id="aa723e25-5c41-416a-b88e-ce4389d74494" isOneWay="false" action="" name="existsSectorByName" bindingOperationName="existsSectorByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="301b1a66-7ec5-44a2-b4b9-e6c56b2bdd12" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:existsSectorByName>
         <!--Optional:-->
         <name>?</name>
      </sch:existsSectorByName>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/existsSectorByNameRequest"/></con:call></con:operation><con:operation id="aa1e8f8d-93c9-4de7-a520-4df314a87af3" isOneWay="false" action="" name="getAllSectors" bindingOperationName="getAllSectors" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d75e2462-0bc8-41c8-be6e-3310194788a3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getAllSectors/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/getAllSectorsRequest"/></con:call></con:operation><con:operation id="3a9729ce-2cbb-41e9-b133-16062dac5988" isOneWay="false" action="" name="getSector" bindingOperationName="getSector" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ef0f0f77-d434-4c30-ac99-c2785a992b82" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getSector>
         <!--Optional:-->
         <sectorId>?</sectorId>
      </sch:getSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/getSectorRequest"/></con:call></con:operation><con:operation id="2a3e7b01-bbc3-49a7-b244-90b6e2cc01b4" isOneWay="false" action="" name="getSectorWithClasses" bindingOperationName="getSectorWithClasses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7dc8ed68-2b44-4501-b614-d12436e8584e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getSectorWithClasses>
         <!--Optional:-->
         <sectorId>?</sectorId>
      </sch:getSectorWithClasses>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/getSectorWithClassesRequest"/></con:call></con:operation><con:operation id="9ac40d63-8943-47dd-8af7-30fe53e752bc" isOneWay="false" action="" name="saveSector" bindingOperationName="saveSector" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="50e7fefa-3298-4d55-b2f2-df7812fa9fc9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:saveSector>
         <!--Optional:-->
         <sector>
            <!--Zero or more repetitions:-->
            <classes>
               <!--Optional:-->
               <className>?</className>
               <!--Optional:-->
               <createdAt/>
               <!--Optional:-->
               <description>?</description>
               <!--Optional:-->
               <id>?</id>
               <!--Optional:-->
               <sectorId>?</sectorId>
               <!--Optional:-->
               <sectorName>?</sectorName>
               <!--Optional:-->
               <updatedAt/>
            </classes>
            <!--Optional:-->
            <createdAt/>
            <!--Optional:-->
            <id>?</id>
            <!--Optional:-->
            <name>?</name>
            <!--Optional:-->
            <updatedAt/>
         </sector>
      </sch:saveSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/saveSectorRequest"/></con:call></con:operation><con:operation id="a6148728-f206-46aa-96fc-febd0acc7757" isOneWay="false" action="" name="searchSectorsByName" bindingOperationName="searchSectorsByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bf123e5e-d954-4d38-a4e7-54f727208dfc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:searchSectorsByName>
         <!--Optional:-->
         <name>?</name>
      </sch:searchSectorsByName>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/searchSectorsByNameRequest"/></con:call></con:operation><con:operation id="fc7a0f18-abd7-469e-856a-0edba1716049" isOneWay="false" action="" name="updateSector" bindingOperationName="updateSector" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3ff8e8e2-ddad-4795-bfd0-8e87cc75b3da" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateSector>
         <!--Optional:-->
         <sector>
            <!--Zero or more repetitions:-->
            <classes>
               <!--Optional:-->
               <className>?</className>
               <!--Optional:-->
               <createdAt/>
               <!--Optional:-->
               <description>?</description>
               <!--Optional:-->
               <id>?</id>
               <!--Optional:-->
               <sectorId>?</sectorId>
               <!--Optional:-->
               <sectorName>?</sectorName>
               <!--Optional:-->
               <updatedAt/>
            </classes>
            <!--Optional:-->
            <createdAt/>
            <!--Optional:-->
            <id>?</id>
            <!--Optional:-->
            <name>?</name>
            <!--Optional:-->
            <updatedAt/>
         </sector>
      </sch:updateSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bassine.com/school-management/SectorsWebService/updateSectorRequest"/></con:call></con:operation></con:interface><con:testSuite id="186fc845-fb6d-468c-bcef-5eaeb2660286" name="SectorsWebServicePortBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e37b48c8-8b6d-4db4-ad24-4a104174357e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="countClassesInSector TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="98c830c8-7738-4757-b21f-30a5e83f1098" name="countClassesInSector"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>countClassesInSector</con:operation><con:request name="countClassesInSector" id="62cd4c68-0568-42fd-b254-6414e07470fb"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:countClassesInSector>
         <!--Optional:-->
         <sectorId>?</sectorId>
      </sch:countClassesInSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/countClassesInSectorRequest"/></con:request></con:config></con:testStep><con:loadTest id="75c25051-4bf1-44e7-853e-089a5f409ce3" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="1cbd06f4-a983-403b-9319-3d4a60d4e5aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteSector TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="c0722a7e-0ad3-4a55-8af6-9c56d69033f5" name="deleteSector"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>deleteSector</con:operation><con:request name="deleteSector" id="f354bc2d-e618-40a8-af80-16c79d1710f4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:deleteSector>
         <!--Optional:-->
         <sectorId>?</sectorId>
      </sch:deleteSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/deleteSectorRequest"/></con:request></con:config></con:testStep><con:loadTest id="3efb5141-965d-4eaa-b487-71bad62eea74" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="6fbea992-e875-4f39-bbe8-cecc8b3f3e27" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="existsSectorByName TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="e6ccd0af-7733-4479-b9b3-20d085ae2bf7" name="existsSectorByName"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>existsSectorByName</con:operation><con:request name="existsSectorByName" id="63b5d60f-3784-4e4f-9cd7-dd81bce256c8"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:existsSectorByName>
         <!--Optional:-->
         <name>?</name>
      </sch:existsSectorByName>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/existsSectorByNameRequest"/></con:request></con:config></con:testStep><con:loadTest id="077d75ea-3988-4cda-b2a2-a79fb53e527d" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="1df7da54-1f5a-4b8b-af3d-81755162ee6d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllSectors TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="5b6b2743-8a91-49ae-91b2-35faa732d8bb" name="getAllSectors"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>getAllSectors</con:operation><con:request name="getAllSectors" id="3a0a7669-acfb-4c7c-b209-f97cad69f87c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getAllSectors/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/getAllSectorsRequest"/></con:request></con:config></con:testStep><con:loadTest id="54d207fd-03c8-4cb7-aa68-76469dbd4f3e" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="99ffa5fb-7e28-4c28-ba2f-75394371134d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSector TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="a8d85797-e432-468f-a7c5-20e3b7439a03" name="getSector"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>getSector</con:operation><con:request name="getSector" id="a8268f86-9803-414a-bd02-ae0f1f9a0244"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getSector>
         <!--Optional:-->
         <sectorId>?</sectorId>
      </sch:getSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/getSectorRequest"/></con:request></con:config></con:testStep><con:loadTest id="cbf44bb8-ba1d-41d4-b0a0-1b6ae77227fc" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="83114a6f-1656-4639-a346-e9e2a11eefc2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSectorWithClasses TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="07331486-0763-48cd-a970-b0d63045cee7" name="getSectorWithClasses"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>getSectorWithClasses</con:operation><con:request name="getSectorWithClasses" id="21892d84-f732-4d2c-9673-36b10a29ebc2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getSectorWithClasses>
         <!--Optional:-->
         <sectorId>?</sectorId>
      </sch:getSectorWithClasses>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/getSectorWithClassesRequest"/></con:request></con:config></con:testStep><con:loadTest id="885ffe3b-358b-4fa2-8541-ec24dce2449f" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="1995dc30-2c83-4ecb-9f49-fb7ff637b46e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="saveSector TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="97caecda-534d-4001-91d0-ecbec96670dc" name="saveSector"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>saveSector</con:operation><con:request name="saveSector" id="7075d801-0361-41ee-8cc9-6cd0792cc3de"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:saveSector>
         <!--Optional:-->
         <sector>
            <!--Zero or more repetitions:-->
            <classes>
               <!--Optional:-->
               <className>?</className>
               <!--Optional:-->
               <createdAt/>
               <!--Optional:-->
               <description>?</description>
               <!--Optional:-->
               <id>?</id>
               <!--Optional:-->
               <sectorId>?</sectorId>
               <!--Optional:-->
               <sectorName>?</sectorName>
               <!--Optional:-->
               <updatedAt/>
            </classes>
            <!--Optional:-->
            <createdAt/>
            <!--Optional:-->
            <id>?</id>
            <!--Optional:-->
            <name>?</name>
            <!--Optional:-->
            <updatedAt/>
         </sector>
      </sch:saveSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/saveSectorRequest"/></con:request></con:config></con:testStep><con:loadTest id="47c19992-8770-4d7f-9735-3458b093d89a" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="c9811f72-ce8c-4411-bcd3-ddce91763dd8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchSectorsByName TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="da89e109-1d00-434a-bf9a-b130e93b6fe0" name="searchSectorsByName"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>searchSectorsByName</con:operation><con:request name="searchSectorsByName" id="5cdddd32-b0e3-4026-8008-91fdcd5ab9e1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:searchSectorsByName>
         <!--Optional:-->
         <name>?</name>
      </sch:searchSectorsByName>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/searchSectorsByNameRequest"/></con:request></con:config></con:testStep><con:loadTest id="6d96e528-68f8-4c0b-b595-2bfacbefbbfc" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="34faad15-00c0-4849-ac92-6f2fa3818dc5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="updateSector TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="e76d62d5-e364-457c-8949-80433ff275f0" name="updateSector"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SectorsWebServicePortBinding</con:interface><con:operation>updateSector</con:operation><con:request name="updateSector" id="2f9def53-ee49-4333-b40b-ff1fe44024c4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/school-management-soap/sectorsWebService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://bassine.com/school-management">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateSector>
         <!--Optional:-->
         <sector>
            <!--Zero or more repetitions:-->
            <classes>
               <!--Optional:-->
               <className>?</className>
               <!--Optional:-->
               <createdAt/>
               <!--Optional:-->
               <description>?</description>
               <!--Optional:-->
               <id>?</id>
               <!--Optional:-->
               <sectorId>?</sectorId>
               <!--Optional:-->
               <sectorName>?</sectorName>
               <!--Optional:-->
               <updatedAt/>
            </classes>
            <!--Optional:-->
            <createdAt/>
            <!--Optional:-->
            <id>?</id>
            <!--Optional:-->
            <name>?</name>
            <!--Optional:-->
            <updatedAt/>
         </sector>
      </sch:updateSector>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://bassine.com/school-management/SectorsWebService/updateSectorRequest"/></con:request></con:config></con:testStep><con:loadTest id="3503d179-82a5-461f-ba53-8e66773e606a" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>